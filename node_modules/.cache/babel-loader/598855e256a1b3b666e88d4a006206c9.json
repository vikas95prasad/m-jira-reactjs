{"ast":null,"code":"import _defineProperty from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/src/ProjectPage/ProjectPage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Moment from 'react-moment';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { userActions } from '../_actions';\nimport { userService } from '../_services';\n\nvar ProjectPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectPage, _React$Component);\n\n  function ProjectPage(props, context) {\n    var _this;\n\n    _classCallCheck(this, ProjectPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectPage).call(this, props, context));\n\n    _this.handleChange = function (name, event) {\n      _this.setState(_defineProperty({}, name, event.target.value));\n    };\n\n    _this.onProjectSubmit = function () {\n      var payload = {\n        name: _this.state.name,\n        description: _this.state.description,\n        due_date: _this.state.dueDate,\n        status: _this.state.status\n      };\n      userService.createProject(payload).then(function (projects) {\n        _this.setState({\n          table: true,\n          snackBar: true\n        });\n      });\n    };\n\n    _this.state = {\n      projects: [],\n      table: true,\n      name: '',\n      description: '',\n      limit: 15,\n      offset: 0,\n      dueDate: '',\n      status: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProjectPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.dispatch(userActions.getAll());\n      userService.getProjects().then(function (projects) {\n        if (projects) {\n          _this2.setState({\n            projects: projects\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          users = _this$props.users;\n      return React.createElement(\"div\", {\n        className: \"project-main-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"All Projects\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        styles: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Create Project\"))), this.state.table ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"project-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"project-table-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Created At\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Updated AT\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.projects.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, row.description), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, row.status), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          format: \"YYYY/MM/DD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, row.created_at)), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          format: \"YYYY/MM/DD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, row.updated_at)));\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"project-create-form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        className: \"project-text-field\",\n        value: this.state.name,\n        onChange: this.handleChange.bind(this, 'name'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Multiline\",\n        multiline: true,\n        rows: \"10\",\n        onChange: this.handleChange.bind(this, 'description'),\n        value: this.state.description,\n        defaultValue: \"Default Value\",\n        className: \"project-text-field\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"due-date\",\n        label: \"Due Date\",\n        type: \"date\",\n        defaultValue: \"2017-05-24\",\n        className: \"project-text-field\",\n        value: this.state.dueDate,\n        onChange: this.handleChange.bind(this, 'dueDate'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Status\",\n        className: \"project-text-field\",\n        value: this.state.status,\n        onChange: this.handleChange.bind(this, 'status'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        styles: {\n          margin: '10px'\n        },\n        onClick: this.onProjectSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return ProjectPage;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var users = state.users,\n      authentication = state.authentication;\n  var user = authentication.user;\n  return {\n    user: user,\n    users: users\n  };\n}\n\nvar connectedProjectPage = connect(mapStateToProps)(ProjectPage);\nexport { connectedProjectPage as ProjectPage };","map":{"version":3,"sources":["/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/src/ProjectPage/ProjectPage.js"],"names":["React","Link","connect","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","SwipeableDrawer","List","ListItem","Divider","ListItemIcon","ListItemText","InboxIcon","MailIcon","Table","TableBody","TableCell","TableHead","TableRow","Paper","Moment","TextField","Snackbar","userActions","userService","ProjectPage","props","context","handleChange","name","event","setState","target","value","onProjectSubmit","payload","state","description","due_date","dueDate","status","createProject","then","projects","table","snackBar","limit","offset","dispatch","getAll","getProjects","user","users","map","row","id","created_at","updated_at","bind","shrink","margin","Component","mapStateToProps","authentication","connectedProjectPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Moment from 'react-moment';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { userActions } from '../_actions';\nimport { userService } from '../_services';\n\nclass ProjectPage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      projects: [],\n      table: true,\n      name: '',\n      description: '',\n      limit: 15,\n      offset: 0,\n      dueDate: '',\n      status: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(userActions.getAll());\n    userService.getProjects().then(projects => {\n      if (projects) {\n        this.setState({\n          projects: projects\n        })\n      }\n    });\n  }\n\n  handleChange = (name, event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  onProjectSubmit = () => {\n    let payload = { name: this.state.name, \n                    description: this.state.description, \n                    due_date: this.state.dueDate, \n                    status: this.state.status }\n    userService.createProject(payload).then(projects => {\n      this.setState({ \n        table: true,\n        snackBar: true\n      });\n    })\n  }\n\n  render() {\n      const { user, users } = this.props;\n      return (\n        <div className='project-main-div'>\n          <div style={{}}>\n            <div>\n              All Projects\n            </div>\n            <div>\n            <Button variant=\"contained\" color=\"primary\" styles={{}}>\n              Create Project\n            </Button>\n            </div>\n          </div>\n          {this.state.table ?\n            <div>\n              <Paper className='project-table'>\n                <Table className='project-table-width'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"right\">Name</TableCell>\n                      <TableCell align=\"right\">Description</TableCell>\n                      <TableCell align=\"right\">Status</TableCell>\n                      <TableCell align=\"right\">Created At</TableCell>\n                      <TableCell align=\"right\">Updated AT</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.projects.map(row => (\n                      <TableRow key={row.id}>\n                        <TableCell align=\"right\">{row.name}</TableCell>\n                        <TableCell align=\"right\">{row.description}</TableCell>\n                        <TableCell align=\"right\">{row.status}</TableCell>\n                        <TableCell align=\"right\"><Moment format=\"YYYY/MM/DD\">{row.created_at}</Moment></TableCell>\n                        <TableCell align=\"right\"><Moment format=\"YYYY/MM/DD\">{row.updated_at}</Moment></TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Paper>\n            </div> : \n            <div>\n              <form className='project-create-form' noValidate autoComplete=\"off\">\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Name\"\n                  className='project-text-field'\n                  value={this.state.name}\n                  onChange={this.handleChange.bind(this, 'name')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows=\"10\"\n                  onChange={this.handleChange.bind(this, 'description')}\n                  value={this.state.description}\n                  defaultValue=\"Default Value\"\n                  className='project-text-field'\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"due-date\"\n                  label=\"Due Date\"\n                  type=\"date\"\n                  defaultValue=\"2017-05-24\"\n                  className=\"project-text-field\"\n                  value={this.state.dueDate}\n                  onChange={this.handleChange.bind(this, 'dueDate')}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Status\"\n                  className='project-text-field'\n                  value={this.state.status}\n                  onChange={this.handleChange.bind(this, 'status')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <Button variant=\"contained\" color=\"primary\" styles={{ margin: '10px'}} onClick={this.onProjectSubmit.bind(this)}>\n                  Submit\n                </Button>\n              </form>\n            </div>\n          }\n        </div>\n      );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { users, authentication } = state;\n  const { user } = authentication;\n  return {\n    user,\n    users\n  };\n}\n\nconst connectedProjectPage = connect(mapStateToProps)(ProjectPage);\nexport { connectedProjectPage as ProjectPage };"]},"metadata":{},"sourceType":"module"}