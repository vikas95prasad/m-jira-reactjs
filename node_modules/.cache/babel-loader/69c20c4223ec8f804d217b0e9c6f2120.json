{"ast":null,"code":"import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\nexport var userActions = {\n  login: login,\n  logout: logout,\n  getAll: getAll\n};\n\nfunction login(username, password) {\n  return function (dispatch) {\n    dispatch(request({\n      username: username\n    }));\n    userService.login(username, password).then(function (user) {\n      dispatch(success(user));\n      history.push('/');\n    }, function (error) {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    userService.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/src/_actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","getAll","username","password","dispatch","request","then","user","success","push","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,MAAM,EAANA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEH,MAAAA,QAAQ,EAARA;AAAF,KAAD,CAAR,CAAR;AAEAP,IAAAA,WAAW,CAACI,KAAZ,CAAkBG,QAAlB,EAA4BC,QAA5B,EACKG,IADL,CAEQ,UAAAC,IAAI,EAAI;AACJH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAV,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACH,KALT,EAMQ,UAAAC,KAAK,EAAI;AACLN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACR,YAAY,CAACc,KAAb,CAAmBA,KAAnB,CAAD,CAAR;AACH,KATT;AAWH,GAdD;;AAgBA,WAASL,OAAT,CAAiBE,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAElB,aAAa,CAACmB,aAAtB;AAAqCN,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAElB,aAAa,CAACoB,aAAtB;AAAqCP,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAElB,aAAa,CAACqB,aAAtB;AAAqCL,MAAAA,KAAK,EAALA;AAArC,KAAP;AAAqD;AAClF;;AAED,SAASV,MAAT,GAAkB;AACdL,EAAAA,WAAW,CAACK,MAAZ;AACA,SAAO;AAAEY,IAAAA,IAAI,EAAElB,aAAa,CAACsB;AAAtB,GAAP;AACH;;AAED,SAASf,MAAT,GAAkB;AACd,SAAO,UAAAG,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAV,IAAAA,WAAW,CAACM,MAAZ,GACKK,IADL,CAEQ,UAAAW,KAAK;AAAA,aAAIb,QAAQ,CAACI,OAAO,CAACS,KAAD,CAAR,CAAZ;AAAA,KAFb,EAGQ,UAAAP,KAAK;AAAA,aAAIN,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAZ;AAAA,KAHb;AAKH,GARD;;AAUA,WAASL,OAAT,GAAmB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAElB,aAAa,CAACwB;AAAtB,KAAP;AAA+C;;AACpE,WAASV,OAAT,CAAiBS,KAAjB,EAAwB;AAAE,WAAO;AAAEL,MAAAA,IAAI,EAAElB,aAAa,CAACyB,cAAtB;AAAsCF,MAAAA,KAAK,EAALA;AAAtC,KAAP;AAAsD;;AAChF,WAASN,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAElB,aAAa,CAAC0B,cAAtB;AAAsCV,MAAAA,KAAK,EAALA;AAAtC,KAAP;AAAsD;AACnF","sourcesContent":["import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}"]},"metadata":{},"sourceType":"module"}