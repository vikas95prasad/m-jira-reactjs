{"ast":null,"code":"import _classCallCheck from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/src/ProjectPage/ProjectPage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { userActions } from '../_actions';\nimport { userService } from '../_services';\n\nvar ProjectPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectPage, _React$Component);\n\n  function ProjectPage(props, context) {\n    var _this;\n\n    _classCallCheck(this, ProjectPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectPage).call(this, props, context));\n    _this.state = {\n      projects: [],\n      table: true,\n      name: '',\n      description: '',\n      limit: 15,\n      offset: 0,\n      dueDate: '',\n      status: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProjectPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.dispatch(userActions.getAll());\n      userService.getProjects().then(function (projects) {\n        if (projects) {\n          _this2.setState({\n            projects: projects\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          users = _this$props.users;\n      return React.createElement(\"div\", {\n        className: \"project-main-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.table ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"project-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"project-table-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Created At\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Updated AT\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.projects.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, row.description), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, row.status), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          format: \"YYYY/MM/DD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, row.created_at)), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          format: \"YYYY/MM/DD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, row.updated_at)));\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"project-create-form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        className: \"project-text-field\",\n        value: this.state.name,\n        onChange: this.handleChange.bind(this, 'name'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Multiline\",\n        multiline: true,\n        rows: \"10\",\n        onChange: this.handleChange.bind(this, 'description'),\n        value: this.state.description,\n        defaultValue: \"Default Value\",\n        className: \"project-text-field\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"due-date\",\n        label: \"Due Date\",\n        type: \"date\",\n        defaultValue: \"2017-05-24\",\n        className: \"project-text-field\",\n        value: this.state.dueDate,\n        onChange: this.handleChange.bind(this, 'dueDate'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Status\",\n        className: \"project-text-field\",\n        value: this.state.status,\n        onChange: this.handleChange.bind(this, 'status'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        styles: {\n          margin: '10px'\n        },\n        onClick: this.onProjectSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return ProjectPage;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var users = state.users,\n      authentication = state.authentication;\n  var user = authentication.user;\n  return {\n    user: user,\n    users: users\n  };\n}\n\nvar connectedProjectPage = connect(mapStateToProps)(ProjectPage);\nexport { connectedProjectPage as ProjectPage };","map":{"version":3,"sources":["/Users/vikas/Downloads/react-redux-jwt-authentication-example-w5tqfu/src/ProjectPage/ProjectPage.js"],"names":["React","Link","connect","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","SwipeableDrawer","List","ListItem","Divider","ListItemIcon","ListItemText","InboxIcon","MailIcon","userActions","userService","ProjectPage","props","context","state","projects","table","name","description","limit","offset","dueDate","status","dispatch","getAll","getProjects","then","setState","user","users","map","row","id","created_at","updated_at","handleChange","bind","shrink","margin","onProjectSubmit","Component","mapStateToProps","authentication","connectedProjectPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport { userActions } from '../_actions';\nimport { userService } from '../_services';\n\nclass ProjectPage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      projects: [],\n      table: true,\n      name: '',\n      description: '',\n      limit: 15,\n      offset: 0,\n      dueDate: '',\n      status: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(userActions.getAll());\n    userService.getProjects().then(projects => {\n      if (projects) {\n        this.setState({\n          projects: projects\n        })\n      }\n    });\n  }\n\n  render() {\n      const { user, users } = this.props;\n      return (\n        <div className='project-main-div'>\n          {this.state.table ?\n            <div>\n              <Paper className='project-table'>\n                <Table className='project-table-width'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"right\">Name</TableCell>\n                      <TableCell align=\"right\">Description</TableCell>\n                      <TableCell align=\"right\">Status</TableCell>\n                      <TableCell align=\"right\">Created At</TableCell>\n                      <TableCell align=\"right\">Updated AT</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.projects.map(row => (\n                      <TableRow key={row.id}>\n                        <TableCell align=\"right\">{row.name}</TableCell>\n                        <TableCell align=\"right\">{row.description}</TableCell>\n                        <TableCell align=\"right\">{row.status}</TableCell>\n                        <TableCell align=\"right\"><Moment format=\"YYYY/MM/DD\">{row.created_at}</Moment></TableCell>\n                        <TableCell align=\"right\"><Moment format=\"YYYY/MM/DD\">{row.updated_at}</Moment></TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Paper>\n            </div> : \n            <div>\n              <form className='project-create-form' noValidate autoComplete=\"off\">\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Name\"\n                  className='project-text-field'\n                  value={this.state.name}\n                  onChange={this.handleChange.bind(this, 'name')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows=\"10\"\n                  onChange={this.handleChange.bind(this, 'description')}\n                  value={this.state.description}\n                  defaultValue=\"Default Value\"\n                  className='project-text-field'\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"due-date\"\n                  label=\"Due Date\"\n                  type=\"date\"\n                  defaultValue=\"2017-05-24\"\n                  className=\"project-text-field\"\n                  value={this.state.dueDate}\n                  onChange={this.handleChange.bind(this, 'dueDate')}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Status\"\n                  className='project-text-field'\n                  value={this.state.status}\n                  onChange={this.handleChange.bind(this, 'status')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <Button variant=\"contained\" color=\"primary\" styles={{ margin: '10px'}} onClick={this.onProjectSubmit.bind(this)}>\n                  Submit\n                </Button>\n              </form>\n            </div>\n          }\n        </div>\n      );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { users, authentication } = state;\n  const { user } = authentication;\n  return {\n    user,\n    users\n  };\n}\n\nconst connectedProjectPage = connect(mapStateToProps)(ProjectPage);\nexport { connectedProjectPage as ProjectPage };"]},"metadata":{},"sourceType":"module"}